name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:

- stage: Install
  jobs:
  - job: Install
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformInstaller@0
      displayName: install terraform'
    - task: TerraformCLI@0
      displayName: 'check terraform version'
      inputs:
        command: version

- stage: Terraform
  jobs:
  - job: Terraform
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Bash@3
        displayName: 'terraform init'
        inputs:
          targetType: 'inline'
          script: |
            #! /bin/bash
            
            cd terraform
            terraform init
    # - task: CopyFiles@2
    #   displayName: 'Copy terraform files'
    #   inputs:
    #     sourceFolder: '$(Build.SourcesDirectory)/terraform'
    #     targetFolder: '/usr/local/bin/terraform'
        # sourceFolder: '$(System.ArtifactStagingDirectory)/terraform'
        # archiveFilePatterns: '$(System.ArtifactStagingDirectory)/terraform'
        # destinationFolder: '$(System.DefaultWorkingDirectory)/'
    # - task: TerraformCLI@0
    #   displayName: 'terraform init'
    #   inputs:
    #     command: /usr/local/bin/terraform init'
    #     workingDirectory: '$(Build.SourcesDirectory)/terraform'
    #     environmentServiceName: '509e635b-952b-4844-9c20-a910f4b573f0'

- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'SHA256:BU+qPaoHheNWUkHrUgRVdpoVYafW3OZtmj0Ch5HZQXU'
        sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSvQI5cDJaeO5eyL9ZtryYQqsb850C8Hi/dIHkw5WUweiE76qYmVBFtdm3lkx3ywIWgfcZjMuo83a+WA3zUaNmm+CYlN83/H3QKb4EmU7q4Ec6fAaST3VYaNFNiTepd6r6uMQK2U9glyLTragM9tQHMadfPSBnE9doW3AOLAl5lezdc9NV6bG+xewf5D+nNOfklAGJ05a2YyW/Yszwq2U+FXq14zmVJG+bYdmS1JDYehNeq13dlra5wbPap+ce/803FSZbbwSd1eW3qYGGbpLuqu1IhQpogbKsaax9Z9e23n/obNPs0Owm/XVuIXXv6pmBfhcX8um4BLUps6+9x8fb'
        sshKeySecureFile: 'id_rsa'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi

- stage: Deployment
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '509e635b-952b-4844-9c20-a910f4b573f0'
              appName: 'dcollioni-app-003-AppService'
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  - deployment: VMDeploy
    environment:
      name:  TEST
      resourceType: VirtualMachine
      tags: udacity
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                #! /bin/bash
                
                sudo apt-get upgrade -y
                sudo apt-get install python3-pip -y
                sudo apt-get install unzip -y
                sudo apt-get install -y chromium-browser
                pip3 install selenium
                export PATH=$PATH:some/path
